Question Link: https://leetcode.com/problems/3sum/
Code:-
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(nums);
        for(int i=0;i<nums.length;i++){
            int j=i+1,k=nums.length-1;
            while(j<k){
                if(nums[j] + nums[k] == -nums[i]){
                ArrayList<Integer> list = new ArrayList<>();
                list.add(nums[i]);
                list.add(nums[j]);
                list.add(nums[k]);
                ans.add(list);
    
                while(j<k &&(nums[j] == nums[j+1])) j++;
                while(j<k &&(nums[k] == nums[k-1])) k--;

                j++;k--;
                
                }
                else if(nums[j] + nums[k] < 0-nums[i])
                    j++;
                else 
                    k--;
            }
            while(i+1<nums.length && nums[i+1]==nums[i]) i++;
        }
        return ans;
    }
}
//(j!=i && j!=k && i!=k )
